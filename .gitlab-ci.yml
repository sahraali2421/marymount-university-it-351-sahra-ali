stages:
  - validate
  - plan
  - apply
  - config
  - destroy

.terraform_init: &terraform_init |-
  terraform init -backend-config="bucket=sahra-tf-state" -backend-config="region=us-east-1" -backend-config="key=terraform.tfstate"

tf-val:
  image: 
    name: hashicorp/terraform
    entrypoint: [""]
  stage: validate
  before_script:
    - *terraform_init
  script:
    - terraform validate
  tags:
    - it-351-runner

tf-plan:
  image: 
    name: hashicorp/terraform
    entrypoint: [""]
  stage: plan
  before_script:
    - *terraform_init
  script:
    - terraform plan -out=tfplan.plan
  artifacts:
    name: tf-plan
    paths:
      - tfplan.plan
  needs:
    - job: tf-val
  tags:
    - it-351-runner

tf-apply:
  image: 
    name: hashicorp/terraform
    entrypoint: [""]
  stage: apply
  before_script:
    - *terraform_init
  script:
    - terraform apply -auto-approve tfplan.plan
    - terraform output instance_ip >> ansible-hosts.yml
  needs:
    - job: tf-plan
  rules:
    - when: manual
  artifacts:
    name: ansible-hosts
    paths: 
      - ansible-hosts.yml
  tags:
    - it-351-runner

ansible:
  image:
    name: mullnerz/ansible-playbook
    entrypoint:  [""]
  stage: configure
  before_script:
    - chomd 0600 gitlab-runner.pem
  script:
    - ansible-playbook -i ansible.host.yml playbook --key-file gitlab-runner.pem
  needs:
    - job: tf-apply
  tags:
    - it-351-runner



tf-destroy:
  image: 
    name: hashicorp/terraform
    entrypoint: [""]
  stage: destroy
  before_script:
    - *terraform_init
  script:
    - terraform destroy -auto-approve
  needs:
    - job: tf-plan
  rules:
    - when: manual
  tags:
    - it-351-runner